PRACTICA EMERGENCIAS

Para crear la base de datos primero hay que crear con el Clay (mal empezamos) la estructura de tablas que tendrá
la base de datos relacional una vez la inicialicemos en el servidor. Para esto sólo hay que crearla con las 
herramientas que proporciona y una vez listas todas las tablas, generar el script .sql para que se ejecute en el
servidor y cree las tablas verdaderas. 

Una vez tenemos el script hay que lanzarlo en el servidor. Para esto primero hay que descomprimirlo en algún 
directorio (no hace falta que sea el mismo que ninguna otra cosa), cargar el archivo bin/runServer.bat y luego
cargarlo con los argumentos que necesita desde el termianl.
Yo lo he hecho desde el cmd de windows yendo al directorio donde lo he instalado (se autoinstala donde lo
descomprimes), y ejecutar la orden "runserver emergencias emergencias" (supongo que uno es el nombre del script
y el otro el nombre que le damos a la base de datos, pero no sé cual es cual).

De momento hasta ahí. 

He conseguido conectarme a la base de datos por medio del ConnectionManager que hace todo el papeleo y los DAO's 
de Paciente, tanto la interfaz de los métodos sin implementar, como el DAO ya implementado y he ejecutado los 
ejemplos que nos dicen en las transparencias. Se supone que el ejemplo debería hacer lo siguiente:
   -1 Se busca un paciente y se crea si no existe
      Paciente("10123456A", "Juan",
         "Martinez Gandia", "Calle Santiago, 4 Valencia", 123453250,
         50, 'H')


   -2  Se busca un paciente y si lo encuentra se muestran sus datos
      emergencias.buscarPaciente("10123456A");

   -3 Se busca un paciente y si lo encuentra se muestran sus datos
      emergencias.buscarPaciente("10123456A");

   -4 Se crea un paciente
      new Paciente("10123457A", "Pedro",
         "Suecaz Santos", "Calle San Vicente, 4 Valencia", 123453251, 25,
         'H')

   -5 Se listan todos los pacientes
      emergencias.ListarPacientes();

Lo que da como salida por consola:
   
 2 --> DNI: 10123456A Nombre: Juan Apellidos: Martinez Gandia Dirección: Calle Santiago, 4 Valencia Teléf.: 123453250 Edad: 50 Sexo: H
 3 --> DNI: 10123456A Nombre: Juan Apellidos: Martinez Gandia Dirección: Calle Santiago, 4 Valencia Teléf.: 123453250 Edad: 50 Sexo: H
 4 --> DNI: 10123456A Nombre: Juan Apellidos: Martinez Gandia Dirección: Calle Santiago, 4 Valencia Teléf.: 123453250 Edad: 50 Sexo: H
 4 --> DNI: 10123457A Nombre: Pedro Apellidos: Suecaz Santos Dirección: Calle San Vicente, 4 Valencia Teléf.: 123453251 Edad: 25 Sexo: H

 Seems correct to me. Let's continue;

28/11/2014 0:04 
   He obtenido la forma de hacer consultas a la base de datos que efectivamente debe estar cargada y preparada para funcionar. 
   La consistencia ha sido un éxito. Tanto como si reiniciamos el servidor como si nos desconectamos de la base de datos y 
   volvemos a conectarnos más tarde la persistencia perdura, que es lo que buscabamos. Ahora tan sólo queda realizar la interfaz
   de usuario y añadir los controladores y las interfacces de las demás clases que tiene gestión externa en sobre la base de datos
   y por último crear una posible clase principal que controle todo y nos de las opciones a las que el usuario tiene acceso. 

   IMPORTANTE CARGAR LA BASE DE DATOS CADA VEZ QUE VAMOS A EJECUTAR TESTEOS. 

   SERIA CONVENIENTE UNA RAMA DE PRUEBAS PARA IR AÑADIENDO LAS INTERFACES Y COMPROBANDO EL CORRECTO FUNCIONAMIENTOY LA INCORPORACIÓN
   DE OTRA PARTE DE DESARROLLADORES.

PROXIMAMENTE: BACKEND!!!